#######################
## 3. Array
#######################
# - 동일 데이터 타입을 갖는 다차원 배열

d <- c(1:12) # 12개 벡터 객체 생성
arr <- array(d, c(3,2,2)) # 3행2열2면 -> 3차원 배열 객체 생성


# 배열 조회
arr[,,1] #1면 
arr[,,2] #2면 

# 배열 자료형과 자료구조 
mode(arr); class(arr) #numeric, array


#######################
## 4. List 
#######################
# 성격이 다른 데이터(벡터, 행렬, 데이터프레임 등 모든 데이터)

# 1개의 원소를 갖는 리스트
list <- list("lee","이순신",95,"hong","홍길동",85)
unlist <- unlist(list) # list 구조 제거      

# 2개 이상의 원소를 갖는 리스트
num <- list(c(1:5), c(6:10))

# key, value형태로 저장      
num2 <- list(first=c(1:5), second=c(6:10))


# key, value 형태로 저장
member <- list(name="hong",age = 35,
               address="한양",gender="남자")

# list 원소 접근 - 변수$키
member$age <- 45  
member$id <- "hong"
member$pwd <- "1234"      

member$age <- NULL  # 원소 제거

# list의 데이터와 객체 타입 보기
mode(list); class(list) # list, list

length(member) # 6 -> 리스트 수

# list data 처리 함수
a <- list(c(1:5))
b <- list(6:10)    
 
lapply(c(a,b), max) # list로 결과 반환
sapply(c(a,b), max)  # vactor로 결과 반환